{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "virtual network name"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "virtual network address range"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "subnetName1": {
      "type": "string",
      "defaultValue": "subnet2",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "subnetPrefix1": {
      "type": "string",
      "defaultValue": "10.0.0.16/28",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "applicationGateway1",
      "metadata": {
        "description": "application gateway name"
      }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large"
      ],
      "defaultValue": "Standard_Small",
      "metadata": {
        "description": "application gateway size"
      }
    },
    "applicationGatewayInstanceCount": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "application gateway instance count"
      }
    },
    "frontendPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "application gateway front end port"
      }
    },
    "backendPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "application gateway back end port"
      }
    },
    "backendIPAddresses": {
      "type": "array",
      "defaultValue": [
        {
          "IpAddress": "10.0.0.24"
        },
        {
          "IpAddress": "10.0.0.25"
        }
      ],
      "metadata": {
        "description": "back end pool ip addresses"
      }
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "cookieBasedAffinity": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Disabled",
      "metadata": {
        "description": "cookie based affinity"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "VM1Name": {
      "type": "string",
      "minLength": 1
    },
    "VM1AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "VM1AdminPassword": {
      "type": "securestring"
    },
    "VM1WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "VM2Name": {
      "type": "string",
      "minLength": 1
    },
    "VM2AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "VM2AdminPassword": {
      "type": "securestring"
    },
    "VM2WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    }
  },
  "variables": {
    "storageName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "VM1ImagePublisher": "MicrosoftWindowsServer",
    "VM1ImageOffer": "WindowsServer",
    "VM1OSDiskName": "VM1OSDisk",
    "VM1VmSize": "Standard_D2_v2",
    "VM1VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "VM1SubnetRef": "[concat(variables('VM1VnetID'), '/subnets/', parameters('subnetName1'))]",
    "VM1StorageAccountContainerName": "vhds",
    "VM1NicName": "[concat(parameters('VM1Name'), 'NetworkInterface')]",
    "VM2ImagePublisher": "MicrosoftWindowsServer",
    "VM2ImageOffer": "WindowsServer",
    "VM2OSDiskName": "VM2OSDisk",
    "VM2VmSize": "Standard_D2_v2",
    "VM2VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "VM2SubnetRef": "[concat(variables('VM2VnetID'), '/subnets/', parameters('subnetName1'))]",
    "VM2StorageAccountContainerName": "vhds",
    "VM2NicName": "[concat(parameters('VM2Name'), 'NetworkInterface')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          },
          {
            "name": "[parameters('subnetName1')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix1')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "mystorage"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('VM1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "VM1Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "privateIPAddress": "10.0.0.24",
              "subnet": {
                "id": "[variables('VM1SubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('VM1Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('VM1NicName'))]"
      ],
      "tags": {
        "displayName": "VM1"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('VM1VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VM1Name')]",
          "adminUsername": "[parameters('VM1AdminUsername')]",
          "adminPassword": "[parameters('VM1AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VM1ImagePublisher')]",
            "offer": "[variables('VM1ImageOffer')]",
            "sku": "[parameters('VM1WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "VM1OSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('VM1StorageAccountContainerName'), '/', variables('VM1OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VM1NicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('VM2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "VM2Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "privateIPAddress": "10.0.0.25",
              "subnet": {
                "id": "[variables('RishabVM2SubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('VM2Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('VM2NicName'))]"
      ],
      "tags": {
        "displayName": "VM2"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('VM2VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VM2Name')]",
          "adminUsername": "[parameters('VM2AdminUsername')]",
          "adminPassword": "[parameters('VM2AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VM2ImagePublisher')]",
            "offer": "[variables('VM2ImageOffer')]",
            "sku": "[parameters('VM2WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "RishabVM2OSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('VM2StorageAccountContainerName'), '/', variables('VM2OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VM2NicName'))]"
            }
          ]
        }
      }
    },

    {
      "apiVersion": "2017-06-01",
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('applicationGatewaySize')]",
          "tier": "Standard",
          "capacity": "[parameters('applicationGatewayInstanceCount')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": "[parameters('frontendPort')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": "[parameters('backendIPAddresses')]"
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": "[parameters('backendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "[parameters('cookieBasedAffinity')]"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIpConfiguration": {
                "Id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    }
  ]
}
